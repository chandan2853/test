#include <iostream>
#include <cstring>
#include <cstdlib>
#include <thread>
#include <fstream>

void bufferOverflow() {
    char buffer[10];
    std::cout << "Enter input: ";
    std::cin >> buffer;
    std::cout << "You entered: " << buffer << std::endl;
}

void formatStringVuln() {
    char userInput[100];
    std::cout << "Enter format string: ";
    std::cin >> userInput;
    printf(userInput); 
}

void memoryLeak() {
    char* leak = new char[100]; 
    strcpy(leak, "This memory is never freed");
    std::cout << leak << std::endl;
}

void useAfterFree() {
    char* ptr = new char[10];
    delete[] ptr; 
    strcpy(ptr, "Oops"); 
    std::cout << ptr << std::endl;
}

void raceCondition() {
    std::ofstream file("race.txt");
    if (!file) return;
    
    auto task = [&]() {
        file << "Thread writing\n";
    };
    
    std::thread t1(task);
    std::thread t2(task);
    
    t1.join();
    t2.join(); 
}

int main() {
    bufferOverflow();
    formatStringVuln();
    memoryLeak();
    useAfterFree();
    raceCondition();
    return 0;
}
